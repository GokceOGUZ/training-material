{"layout":"tutorial_hands_on","title":"Scanpy Parameter Iterator","zenodo_link":"https://zenodo.org/record/8011681","subtopic":"tricks","priority":3,"questions":["How can I run a tool with multiple parameter values?","Do I have to enter parameter values manually each time I want to check a new value?","What tools can take multiple values at once and iterate over them?"],"objectives":["Execute the Scanpy Parameter Iterator","Recognise what tools you can use Parameter Iterator with","Operate tools working on dataset collections","Compare plots resulting from different parameters values"],"requirements":[{"type":"internal","topic_name":"single-cell","tutorials":["scrna-case_alevin","scrna-case_alevin-combine-datasets","scrna-case_basic-pipeline"]}],"time_estimation":"2H","key_points":["Scanpy ParameterIterator can be used for k nearest neighbours (Scanpy ComputeGraph), perplexity (Scanpy RunTSNE) and resolution (Scanpy FindCluster).","You can enter the parameter values either as a list or as values to be iterated in step.","Parameter Iterator is a useful tool to quickly and easily compare the differences in the outputs caused by changing parameter values. Hence it allows us to choose the optimal parameter values."],"tags":null,"contributions":{"authorship":["wee-snufkin"],"testing":["nomadscientist"],"funding":["eosc-life"]},"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00357","url":"/topics/single-cell/tutorials/scanpy_parameter_iterator/tutorial.html","topic_name":"single-cell","tutorial_name":"scanpy_parameter_iterator","dir":"topics/single-cell/tutorials/scanpy_parameter_iterator","symlink":null,"id":"single-cell/scanpy_parameter_iterator","hands_on":true,"slides":false,"mod_date":"2023-12-05 14:44:50 +0000","pub_date":"2023-07-19 06:47:23 +0000","version":7,"workflows":[{"workflow":"Scanpy-Parameter-Iterator-workflow-full.ga","tests":true,"url":"https://training.galaxyproject.org/training-material/topics/single-cell/tutorials/scanpy_parameter_iterator/workflows/Scanpy-Parameter-Iterator-workflow-full.ga","url_html":"https://training.galaxyproject.org/training-material/topics/single-cell/tutorials/scanpy_parameter_iterator/workflows/Scanpy-Parameter-Iterator-workflow-full.html","path":"topics/single-cell/tutorials/scanpy_parameter_iterator/workflows/Scanpy-Parameter-Iterator-workflow-full.ga","wfid":"single-cell-scanpy_parameter_iterator","wfname":"scanpy-parameter-iterator-workflow-full","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/single-cell-scanpy_parameter_iterator/versions/scanpy-parameter-iterator-workflow-full","license":"CC-BY-4.0","parent_id":"single-cell/scanpy_parameter_iterator","topic_id":"single-cell","tutorial_id":"scanpy_parameter_iterator","creators":[{"class":"Person","identifier":"0009-0001-2017-8805","name":"Julia Jakiela"}],"name":"Scanpy Parameter Iterator workflow full (imported from URL)","title":"Scanpy Parameter Iterator workflow full (imported from URL)","version":1,"description":"","tags":[],"features":{"report":null,"subworkflows":false,"comments":false,"parameters":false},"workflowhub_id":"1243","history":[{"hash":"331d2c1b553213fe663c01d608bba47638414644","unix":"1689307889","message":"updated workflow tests","short_hash":"331d2c1b5","num":2},{"hash":"68fc015a7fae9417a5365fb3edda17a5aaf9d87b","unix":"1686208349","message":"add workflow tests","short_hash":"68fc015a7","num":1}],"test_results":null,"modified":"2024-07-16 10:51:04 +0000","mermaid":"flowchart TD\n  0[\"ℹ️ Input Dataset\\nScanpy RunPCA: AnnData object\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"ParameterIterator n-neighbors\"];\n  2[\"ℹ️ Input Dataset\\nScanpy ComputeGraph on data X and data Y: Graph object AnnData\"];\n  style 2 stroke:#2c3143,stroke-width:4px;\n  3[\"ParameterIterator perplexity\"];\n  4[\"ℹ️ Input Dataset\\nScanpy RunUMAP on data X: UMAP object AnnData\"];\n  style 4 stroke:#2c3143,stroke-width:4px;\n  5[\"ParameterIterator resolution\"];\n  6[\"Scanpy ComputeGraph\"];\n  0 -->|output| 6;\n  1 -->|parameter_iteration| 6;\n  1e60c7cd-7e02-450f-a403-f3df1e548757[\"Output\\nScanpy ComputeGraph on collection X: Graph object AnnData (n-neighbours)\"];\n  6 --> 1e60c7cd-7e02-450f-a403-f3df1e548757;\n  style 1e60c7cd-7e02-450f-a403-f3df1e548757 stroke:#2c3143,stroke-width:4px;\n  7[\"Scanpy RunTSNE\"];\n  2 -->|output| 7;\n  3 -->|parameter_iteration| 7;\n  15143fea-5e2b-4b25-b5d1-0726da910f67[\"Output\\nScanpy RunTSNE on collection X: tSNE object AnnData (perplexity)\"];\n  7 --> 15143fea-5e2b-4b25-b5d1-0726da910f67;\n  style 15143fea-5e2b-4b25-b5d1-0726da910f67 stroke:#2c3143,stroke-width:4px;\n  8[\"Scanpy FindCluster\"];\n  4 -->|output| 8;\n  5 -->|parameter_iteration| 8;\n  6fdddfe7-c4da-4421-86a0-9819ce4c769c[\"Output\\nScanpy FindCluster on collection X: Clusters AnnData (resolution)\"];\n  8 --> 6fdddfe7-c4da-4421-86a0-9819ce4c769c;\n  style 6fdddfe7-c4da-4421-86a0-9819ce4c769c stroke:#2c3143,stroke-width:4px;\n  9[\"Scanpy RunTSNE\"];\n  6 -->|output_h5ad| 9;\n  7c988247-b167-4733-859f-fcd582f91959[\"Output\\nScanpy RunTSNE on collection X: tSNE object AnnData (n-neighbours)\"];\n  9 --> 7c988247-b167-4733-859f-fcd582f91959;\n  style 7c988247-b167-4733-859f-fcd582f91959 stroke:#2c3143,stroke-width:4px;\n  10[\"Scanpy RunUMAP\"];\n  7 -->|output_h5ad| 10;\n  1f5abfa2-845c-4763-9f87-e4b167aa7bc8[\"Output\\nScanpy RunUMAP on collection X: UMAP object AnnData (perplexity)\"];\n  10 --> 1f5abfa2-845c-4763-9f87-e4b167aa7bc8;\n  style 1f5abfa2-845c-4763-9f87-e4b167aa7bc8 stroke:#2c3143,stroke-width:4px;\n  11[\"Scanpy PlotEmbed\"];\n  8 -->|output_h5ad| 11;\n  99185d1e-047f-47f2-9081-07506e1c17df[\"Output\\nresolution_pca_plots\"];\n  11 --> 99185d1e-047f-47f2-9081-07506e1c17df;\n  style 99185d1e-047f-47f2-9081-07506e1c17df stroke:#2c3143,stroke-width:4px;\n  12[\"Scanpy PlotEmbed\"];\n  8 -->|output_h5ad| 12;\n  65d7b619-8659-4008-9e56-db21fda6ce8c[\"Output\\nresolution_umap_plots\"];\n  12 --> 65d7b619-8659-4008-9e56-db21fda6ce8c;\n  style 65d7b619-8659-4008-9e56-db21fda6ce8c stroke:#2c3143,stroke-width:4px;\n  13[\"Scanpy PlotEmbed\"];\n  8 -->|output_h5ad| 13;\n  bdcaf837-5fc4-4024-a87a-eabfa0110127[\"Output\\nresolution_tsne_plots\"];\n  13 --> bdcaf837-5fc4-4024-a87a-eabfa0110127;\n  style bdcaf837-5fc4-4024-a87a-eabfa0110127 stroke:#2c3143,stroke-width:4px;\n  14[\"Scanpy RunUMAP\"];\n  9 -->|output_h5ad| 14;\n  8a0b3d69-e7df-4977-b8eb-ec478b914a26[\"Output\\nScanpy RunUMAP on collection X: UMAP object AnnData (n-neighbours)\"];\n  14 --> 8a0b3d69-e7df-4977-b8eb-ec478b914a26;\n  style 8a0b3d69-e7df-4977-b8eb-ec478b914a26 stroke:#2c3143,stroke-width:4px;\n  15[\"Scanpy FindCluster\"];\n  10 -->|output_h5ad| 15;\n  c2e0d48f-9f0e-4452-8fb5-e78420578c65[\"Output\\nScanpy FindCluster on collection X: Clusters AnnData (perplexity)\"];\n  15 --> c2e0d48f-9f0e-4452-8fb5-e78420578c65;\n  style c2e0d48f-9f0e-4452-8fb5-e78420578c65 stroke:#2c3143,stroke-width:4px;\n  16[\"Scanpy FindCluster\"];\n  14 -->|output_h5ad| 16;\n  c952b32e-99d5-4b94-a6d7-be59439c4dca[\"Output\\nScanpy FindCluster on collection X: Clusters AnnData (n-neighbours)\"];\n  16 --> c952b32e-99d5-4b94-a6d7-be59439c4dca;\n  style c952b32e-99d5-4b94-a6d7-be59439c4dca stroke:#2c3143,stroke-width:4px;\n  17[\"Scanpy PlotEmbed\"];\n  15 -->|output_h5ad| 17;\n  44c0ec07-b64e-428f-9254-5217e8041416[\"Output\\nperplexity_plots\"];\n  17 --> 44c0ec07-b64e-428f-9254-5217e8041416;\n  style 44c0ec07-b64e-428f-9254-5217e8041416 stroke:#2c3143,stroke-width:4px;\n  18[\"Scanpy PlotEmbed\"];\n  16 -->|output_h5ad| 18;\n  0b30f573-8ebd-4582-9bcd-58ba5c778658[\"Output\\nn-neighbors_plots\"];\n  18 --> 0b30f573-8ebd-4582-9bcd-58ba5c778658;\n  style 0b30f573-8ebd-4582-9bcd-58ba5c778658 stroke:#2c3143,stroke-width:4px;","graph_dot":"digraph main {\n  node [fontname=\"Atkinson Hyperlegible\", shape=box, color=white,style=filled,color=peachpuff,margin=\"0.2,0.2\"];\n  edge [fontname=\"Atkinson Hyperlegible\"];\n  0[color=lightblue,label=\"ℹ️ Input Dataset\\nScanpy RunPCA: AnnData object\"]\n  1[label=\"ParameterIterator n-neighbors\"]\n  2[color=lightblue,label=\"ℹ️ Input Dataset\\nScanpy ComputeGraph on data X and data Y: Graph object AnnData\"]\n  3[label=\"ParameterIterator perplexity\"]\n  4[color=lightblue,label=\"ℹ️ Input Dataset\\nScanpy RunUMAP on data X: UMAP object AnnData\"]\n  5[label=\"ParameterIterator resolution\"]\n  6[label=\"Scanpy ComputeGraph\"]\n  0 -> 6 [label=\"output\"]\n  1 -> 6 [label=\"parameter_iteration\"]\n  k1e60c7cd7e02450fa403f3df1e548757[color=lightseagreen,label=\"Output\\nScanpy ComputeGraph on collection X: Graph object AnnData (n-neighbours)\"]\n  6 -> k1e60c7cd7e02450fa403f3df1e548757\n  7[label=\"Scanpy RunTSNE\"]\n  2 -> 7 [label=\"output\"]\n  3 -> 7 [label=\"parameter_iteration\"]\n  k15143fea5e2b4b25b5d10726da910f67[color=lightseagreen,label=\"Output\\nScanpy RunTSNE on collection X: tSNE object AnnData (perplexity)\"]\n  7 -> k15143fea5e2b4b25b5d10726da910f67\n  8[label=\"Scanpy FindCluster\"]\n  4 -> 8 [label=\"output\"]\n  5 -> 8 [label=\"parameter_iteration\"]\n  k6fdddfe7c4da442186a09819ce4c769c[color=lightseagreen,label=\"Output\\nScanpy FindCluster on collection X: Clusters AnnData (resolution)\"]\n  8 -> k6fdddfe7c4da442186a09819ce4c769c\n  9[label=\"Scanpy RunTSNE\"]\n  6 -> 9 [label=\"output_h5ad\"]\n  k7c988247b1674733859ffcd582f91959[color=lightseagreen,label=\"Output\\nScanpy RunTSNE on collection X: tSNE object AnnData (n-neighbours)\"]\n  9 -> k7c988247b1674733859ffcd582f91959\n  10[label=\"Scanpy RunUMAP\"]\n  7 -> 10 [label=\"output_h5ad\"]\n  k1f5abfa2845c47639f87e4b167aa7bc8[color=lightseagreen,label=\"Output\\nScanpy RunUMAP on collection X: UMAP object AnnData (perplexity)\"]\n  10 -> k1f5abfa2845c47639f87e4b167aa7bc8\n  11[label=\"Scanpy PlotEmbed\"]\n  8 -> 11 [label=\"output_h5ad\"]\n  k99185d1e047f47f2908107506e1c17df[color=lightseagreen,label=\"Output\\nresolution_pca_plots\"]\n  11 -> k99185d1e047f47f2908107506e1c17df\n  12[label=\"Scanpy PlotEmbed\"]\n  8 -> 12 [label=\"output_h5ad\"]\n  k65d7b619865940089e56db21fda6ce8c[color=lightseagreen,label=\"Output\\nresolution_umap_plots\"]\n  12 -> k65d7b619865940089e56db21fda6ce8c\n  13[label=\"Scanpy PlotEmbed\"]\n  8 -> 13 [label=\"output_h5ad\"]\n  kbdcaf8375fc44024a87aeabfa0110127[color=lightseagreen,label=\"Output\\nresolution_tsne_plots\"]\n  13 -> kbdcaf8375fc44024a87aeabfa0110127\n  14[label=\"Scanpy RunUMAP\"]\n  9 -> 14 [label=\"output_h5ad\"]\n  k8a0b3d69e7df4977b8ebec478b914a26[color=lightseagreen,label=\"Output\\nScanpy RunUMAP on collection X: UMAP object AnnData (n-neighbours)\"]\n  14 -> k8a0b3d69e7df4977b8ebec478b914a26\n  15[label=\"Scanpy FindCluster\"]\n  10 -> 15 [label=\"output_h5ad\"]\n  kc2e0d48f9f0e44528fb5e78420578c65[color=lightseagreen,label=\"Output\\nScanpy FindCluster on collection X: Clusters AnnData (perplexity)\"]\n  15 -> kc2e0d48f9f0e44528fb5e78420578c65\n  16[label=\"Scanpy FindCluster\"]\n  14 -> 16 [label=\"output_h5ad\"]\n  kc952b32e99d54b94a6d7be59439c4dca[color=lightseagreen,label=\"Output\\nScanpy FindCluster on collection X: Clusters AnnData (n-neighbours)\"]\n  16 -> kc952b32e99d54b94a6d7be59439c4dca\n  17[label=\"Scanpy PlotEmbed\"]\n  15 -> 17 [label=\"output_h5ad\"]\n  k44c0ec07b64e428f92545217e8041416[color=lightseagreen,label=\"Output\\nperplexity_plots\"]\n  17 -> k44c0ec07b64e428f92545217e8041416\n  18[label=\"Scanpy PlotEmbed\"]\n  16 -> 18 [label=\"output_h5ad\"]\n  k0b30f5738ebd45829bcd58ba5c778658[color=lightseagreen,label=\"Output\\nn-neighbors_plots\"]\n  18 -> k0b30f5738ebd45829bcd58ba5c778658\n}","workflow_tools":["toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_parameter_iterator/scanpy_parameter_iterator/0.0.1+galaxy9","toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_compute_graph/scanpy_compute_graph/1.8.1+galaxy9","toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_run_tsne/scanpy_run_tsne/1.8.1+galaxy9","toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_find_cluster/scanpy_find_cluster/1.8.1+galaxy9","toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_run_umap/scanpy_run_umap/1.8.1+galaxy9","toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_plot_embed/scanpy_plot_embed/1.8.1+galaxy9"]}],"api":"https://training.galaxyproject.org/training-material/api/topics/single-cell/tutorials/scanpy_parameter_iterator/tutorial.json","tools":["toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_compute_graph/scanpy_compute_graph/1.8.1+galaxy9","toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_find_cluster/scanpy_find_cluster/1.8.1+galaxy9","toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_parameter_iterator/scanpy_parameter_iterator/0.0.1+galaxy9","toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_plot_embed/scanpy_plot_embed/1.8.1+galaxy9","toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_run_tsne/scanpy_run_tsne/1.8.1+galaxy9","toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_run_umap/scanpy_run_umap/1.8.1+galaxy9"],"supported_servers":{"exact":[{"url":"https://usegalaxy.eu","name":"UseGalaxy.eu","usegalaxy":true},{"url":"https://usegalaxy.org","name":"UseGalaxy.org (Main)","usegalaxy":true}],"inexact":[{"url":"https://usegalaxy.org.au","name":"UseGalaxy.org.au","usegalaxy":true}]},"topic_name_human":"Single Cell","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[{"name":"scanpy_compute_graph","owner":"ebi-gxa","revisions":"6417cccad133","tool_panel_section_label":"Single-cell","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"scanpy_find_cluster","owner":"ebi-gxa","revisions":"2ccd9f9e2cd0","tool_panel_section_label":"Single-cell","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"scanpy_parameter_iterator","owner":"ebi-gxa","revisions":"73d43034c860","tool_panel_section_label":"Single-cell","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"scanpy_plot_embed","owner":"ebi-gxa","revisions":"35f6611fb8c3","tool_panel_section_label":"Single-cell","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"scanpy_run_tsne","owner":"ebi-gxa","revisions":"181d61d2f3cd","tool_panel_section_label":"Single-cell","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"scanpy_run_umap","owner":"ebi-gxa","revisions":"bd4a244faeb8","tool_panel_section_label":"Single-cell","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"}]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools:\n- name: scanpy_compute_graph\n  owner: ebi-gxa\n  revisions: 6417cccad133\n  tool_panel_section_label: Single-cell\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: scanpy_find_cluster\n  owner: ebi-gxa\n  revisions: 2ccd9f9e2cd0\n  tool_panel_section_label: Single-cell\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: scanpy_parameter_iterator\n  owner: ebi-gxa\n  revisions: 73d43034c860\n  tool_panel_section_label: Single-cell\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: scanpy_plot_embed\n  owner: ebi-gxa\n  revisions: 35f6611fb8c3\n  tool_panel_section_label: Single-cell\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: scanpy_run_tsne\n  owner: ebi-gxa\n  revisions: 181d61d2f3cd\n  tool_panel_section_label: Single-cell\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: scanpy_run_umap\n  owner: ebi-gxa\n  revisions: bd4a244faeb8\n  tool_panel_section_label: Single-cell\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial","contributors":[{"name":"Julia Jakiela","email":"juliajot36@gmail.com","joined":"2022-06","id":"wee-snufkin","url":"https://training.galaxyproject.org/training-material/api/contributors/wee-snufkin.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/wee-snufkin/"},{"name":"Wendi Bacon","email":"wendi.bacon@open.ac.uk","twitter":"WendiBacon1","matrix":"nomadscientist:matrix.org","joined":"2020-03","elixir_node":"uk","orcid":"0000-0002-8170-8806","bio":"Senior Lecturer at The Open University","fediverse":"https://mstdn.science/@wendibacon1","fediverse_flavor":"mastodon","affiliations":["elixir-europe"],"id":"nomadscientist","url":"https://training.galaxyproject.org/training-material/api/contributors/nomadscientist.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/nomadscientist/"},{"name":"EOSC-Life","github":false,"joined":"2023-04","avatar":"https://www.eosc-life.eu/wp-content/themes/eosc-life-v2/assets/images/eosclogo.png","funder":true,"funding_id":"824087","funding_system":"cordis","funding_statement":"EOSC-Life has received funding from the European Union’s Horizon 2020 programme under grant agreement number 824087","url":"https://training.galaxyproject.org/training-material/api/funders/eosc-life.json","members":["bgruening"],"id":"eosc-life","page":"https://training.galaxyproject.org/training-material/hall-of-fame/eosc-life/"}]}